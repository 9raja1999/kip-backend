services:
  app-service:
    build:
      context: ./
      dockerfile: ./apps/app/Dockerfile.dev
    user: node
    ports:
      - '3000:3000'
    container_name: app-service
    env_file:
      - .env
    restart: always
    command: npm run start:dev app
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - auth-service
      - postgres
    networks:
      - nest-net

  auth-service:
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile.dev
    user: node
    container_name: auth-service
    restart: always
    command: npm run start:dev auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - postgres
    networks:
      - nest-net

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: nestuser
      POSTGRES_PASSWORD: nestpassword
      POSTGRES_DB: nestdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - nest-net

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    env_file:
      - .env
    ports:
      - '5050:80'
    depends_on:
      - postgres
    networks:
      - nest-net

networks:
  nest-net:
    driver: bridge

volumes:
  postgres_data:
